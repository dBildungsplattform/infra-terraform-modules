#
# In this configuration the ingress controller is accessible via the controllers node port.
# It is the configuration used for sc-prod-legacy.
# An ingress controller runs on each node in the default namespace.
# Services are configured with type ClusterIP to make them accessible from the ingress controller.
#
# kubectl -n default get svc
# nginx-ingress-controller        NodePort    10.233.55.47    <none>        80:30080/TCP   201d
# nginx-ingress-default-backend   ClusterIP   10.233.26.78    <none>        80/TCP         201d
#

#
# Ingress controller see for example:      provision/sc-prod-legacy/values-sc-prod-legacy.yml
# Ingress (not used here) see for example: provision/sc-prod-legacy/networkpolicy-ingress.yml
#
# Use: "helm show values ingress-nginx/ingress-nginx" to view configuration options.
# Helm Repo: "helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx"
#
controller:
  config:
    proxy-body-size: 512m
    use-forwarded-headers: "true"
    skip-access-log-urls: "/nuxtversion"
  kind: DaemonSet
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 30%
  dnsPolicy: ClusterFirstWithHostNet
  service:
    type: NodePort
    enableHttp: true
    enableHttps: false
    nodePorts:
      http: 30080
  tolerations:
  - key: "apihost"
    operator: "Equal"
    value: "yes"
    effect: "NoSchedule"
  - key: "librehost"
    operator: "Equal"
    value: "yes"
    effect: "NoSchedule"
  - key: "librehost"
    operator: "Equal"
    value: "yes"
    effect: "NoExecute"
